library(tidyverse)
library(ggplot2)

# Read csv, filter out missing data, convert to numeric
Canines <- read_csv("severity_canine_data.csv")
Canines$Defects <- as.numeric(Canines$Defects)
Canines$`Mass (kg)` <- as.numeric(Canines$`Mass (kg)`)

# Plots for Defect frequency between nat. park and non nat. park
ggplot(Canines, aes(x = Defects, fill = Location, color = Location)) + 
  geom_histogram(position = "identity")
Canines %>% filter(Location == "NP") %>% ggplot(aes(x = Defects)) + geom_histogram()
Canines %>% filter(Location == "SP") %>% ggplot(aes(x = Defects)) + geom_histogram()

# Plots are the exact same for Urban/Not Urban 



# Plotting Defects against Mass
ggplot(Canines, aes(x=Defects, y=`Mass (kg)`), color = Location) + 
  geom_point() +
  geom_smooth(method = "lm", se = TRUE)

# correlation coefficient
cor(Canines$Defects, Canines$`Mass (kg)`)
cor(Canines$Defects, Canines$`Mass (kg)`)^2
# correlation = 0.0547


# residual plot
resid <- resid(lm(`Mass (kg)` ~ Defects, data = Canines))
plot(resid)
# no real relation

# Euthanasia
ggplot(Canines, aes(x = Defects, fill = Euthanasia, color = Euthanasia)) + 
  geom_histogram(position = "identity")
Canines %>% filter(Euthanasia == "EUP") %>% ggplot(aes(x = Defects)) + geom_histogram()
Canines %>% filter(Euthanasia == "EUW") %>% ggplot(aes(x = Defects)) + geom_histogram()



All <- read_csv("LEH_Data_All_Canines.csv")
All <- filter(All, Adult != "No")
All$Mean <- as.numeric(All$Mean)
Year <- filter(All, Year != "X")
Year$Year <- as.numeric(Year$Year)



ggplot(Year, aes(x = Year, y = Mean, color = `Data Set`)) + 
  geom_point() +
  geom_smooth(method = "lm")

# by species

ggplot(All, aes(x = Species, y = Mean)) + 
  geom_dotplot(binaxis = 'y', stackdir = 'center')

# mann whitney parametric test (repping osu lol)

wilcox.test(filter(All, Species == "anubis")$Mean, 
            filter(All, Species == "ursinus")$Mean, alternative = "greater")

# p = 0.134
# ties so not exact p value (gonna do a t test)

t.test(filter(All, Species == "anubis")$Mean, 
filter(All, Species == "ursinus")$Mean, alternative = "greater")
# p = 0.11

# removing females
wilcox.test(filter(All, Species == "anubis" & Sex != "F")$Mean, 
            filter(All, Species == "ursinus" & Sex != "F")$Mean, alternative = "greater")
# p = 0.199
t.test(filter(All, Species == "anubis" & Sex != "F")$Mean, 
       filter(All, Species == "ursinus" & Sex != "F")$Mean, alternative = "greater")
# p = 0.16

# bootstrap ?
NMC <- 1000
t_test <- c()
for (i in 1:NMC){
  anubis <- sample(filter(All, Species == "anubis")$Mean,
                   size = length(filter(All, Species == "anubis")), replace = TRUE)
  ursinus <- sample(filter(All, Species == "ursinus")$Mean,
                    size = length(filter(All, Species == "ursinus")), replace = TRUE)
  t_test[i] <- t.test(anubis, ursinus, alternative = "greater")$p.value
}
t_test <- as.numeric(t_test)

# mean is 0.197
